



# Use an official NVIDIA CUDA base image
ARG OS_VERSION="22.04"
ARG CUDA_VERSION="12.1.0"
FROM nvidia/cuda:${CUDA_VERSION}-devel-ubuntu${OS_VERSION}

# Update and install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    wget \
    git \
    ca-certificates \
    ssh

# Create symbolic links for CUDA include and lib directories
RUN ln -s /usr/local/cuda/include /usr/local/include/cuda && \
    ln -s /usr/local/cuda/lib64 /usr/local/lib/cuda

# Install OpenMPI
ARG OPENMPI_VERSION=4.1.2
RUN wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-${OPENMPI_VERSION}.tar.gz && \
    tar -xzf openmpi-${OPENMPI_VERSION}.tar.gz && \
    cd openmpi-${OPENMPI_VERSION} && \
    ./configure --with-cuda --prefix=/usr/local && \
    make -j$(nproc) && \
    make install && \
    cd .. && rm -rf openmpi-${OPENMPI_VERSION}.tar.gz openmpi-${OPENMPI_VERSION}

# Set environment variables for OpenMPI
ENV PATH="/usr/local/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/lib:${LD_LIBRARY_PATH}"

# Install python3.8

ENV DEBIAN_FRONTEND=noninteractive

#RUN apt-get update
RUN apt install -y software-properties-common
RUN add-apt-repository ppa:deadsnakes/ppa -y
RUN apt-get install -y -qq python3.8 python3.8-dev python3-pip

# Install ray
RUN pip install ray torch torchvision

# install pygloo


# MPI should be available

# needed for containernet
USER root
RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		vim \
		net-tools \
		iputils-ping \
        iproute2

RUN pip install protobuf==3.20.*

COPY code ./code